# Generated by Django 4.2.13 on 2024-06-03 01:07

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import proyectos.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('editorial_literaria', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Nombre completo de Autor')),
                ('description', models.TextField(blank=True)),
                ('order', proyectos.fields.OrderField(blank=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Título del proyecto')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('overview', ckeditor.fields.RichTextField(help_text='Identificación de un debate o giro paradigmático y explicación sobre cómo cada uno de los capítulos que compondrán el tomo representan lo dicho.', max_length=1000, verbose_name='Resumen breve del proyecto de tomo')),
                ('plan', models.TextField(blank=True, help_text='Detalle de manera clara y sucinta.', null=True, verbose_name='Describa el plan de uso de incentivo')),
                ('cv', models.FileField(blank=True, help_text='En calidad de coordinador/a o autor/a del proyecto, que acredite experiencia en el campo del conocimiento pertinente, así como experiencia en temas editoriales, de publicación, coordinación y/o de curaduría de proyectos culturales o académicos según corresponda, de al menos 2 años.', null=True, upload_to='curriculms/', verbose_name='Perfil del postulante')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('proceso', models.CharField(blank=True, choices=[('Aprobado', 'Aprobado'), ('Activo', 'Activo'), ('Subsanación', 'Subsanación'), ('Rechazado', 'Rechazado')], default='Activo', help_text='Elija el proceso en la que se encuentra esta postulacion', max_length=255, null=True, verbose_name='Proceso del proyecto postulado')),
                ('recomend', ckeditor.fields.RichTextField(blank=True, help_text='Si el proceso se encuentrta en subsanamiento, Escribir en el re-cuadro, las recomendaciones.', null=True)),
                ('dictamen', ckeditor.fields.RichTextField(blank=True, help_text='Si el proceso se encuentrta en Aprobado y calificado, Escribir en el re-cuadro el dicatmen final de jurado.', null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proyectos_course', to='editorial_literaria.course', verbose_name='Elija la convocatoria que desea postular este proyecto.')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Proyectos editoriales postulados',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categorias Literarias',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='WorkPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Nombre de la Actividad')),
                ('description', models.TextField(verbose_name='Describa los pasos que va a seguir para desarollar la actividad en el plan')),
                ('start_date', models.DateField(verbose_name='Fecha de comienzo de actividad')),
                ('end_date', models.DateField(verbose_name='Fecha de finalización de actividad')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Nombre usuario')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workplan', to='proyectos.project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='subject',
            field=models.ForeignKey(help_text='Seleccione la categoría de la convocatoria en la que desea postular', on_delete=django.db.models.deletion.CASCADE, related_name='proyectos_subject', to='proyectos.subject', verbose_name='Nombre de categoría de convocatoria a la que se desea postular'),
        ),
        migrations.CreateModel(
            name='jurados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_1', models.CharField(blank=True, max_length=250, null=True, verbose_name='Nombre del Primer Jurado competente')),
                ('dictamen_1', ckeditor.fields.RichTextField(blank=True, help_text='Escriba su dictamen, justificando la calificación impuesta en el proyecto editorial', null=True)),
                ('calificacion_1', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('nombre_2', models.CharField(blank=True, max_length=250, null=True, verbose_name='Nombre del Segundo Jurado competente')),
                ('dictamen_2', ckeditor.fields.RichTextField(blank=True, help_text='Escriba su dictamen, justificando la calificación impuesta en el proyecto editorial', null=True)),
                ('calificacion_2', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('nombre_3', models.CharField(blank=True, max_length=250, null=True, verbose_name='Nombre del tercer Jurado competente')),
                ('dictamen_3', ckeditor.fields.RichTextField(blank=True, help_text='Escriba su dictamen, justificando la calificación impuesta en el proyecto editorial', null=True)),
                ('calificacion_3', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('resultado', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jury', to='proyectos.project')),
            ],
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='files')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('order', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors_contents_project', to='proyectos.author')),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ('file',)}, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_content_set', to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='BibliographicReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Escriba el título de la obra')),
                ('authors', models.CharField(max_length=255, verbose_name='Escriba el nombre del primer autor')),
                ('publication_year', models.PositiveIntegerField(verbose_name='Escriba la fecha de publicación')),
                ('journal', models.CharField(blank=True, max_length=255, null=True, verbose_name='Escriba el año de publicación')),
                ('volume', models.CharField(blank=True, max_length=50, null=True, verbose_name='Escriba el volumen')),
                ('issue', models.CharField(blank=True, max_length=50, null=True, verbose_name='Escriba lugar de publicación')),
                ('pages', models.CharField(blank=True, max_length=50, null=True, verbose_name='Escriba el número de páginas')),
                ('doi', models.CharField(blank=True, max_length=100, null=True, verbose_name='Si dispone un D.O.I (Digital Object Identifier) de publicación, escribirlo por favor')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Si su referencia tiene una URL')),
                ('abstract', models.TextField(blank=True, null=True, verbose_name='Escriba el resumen de la obra')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='biblio', to='proyectos.project')),
            ],
        ),
        migrations.AddField(
            model_name='author',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='proyectos.project'),
        ),
        migrations.AddField(
            model_name='author',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects_authors', to=settings.AUTH_USER_MODEL),
        ),
    ]
