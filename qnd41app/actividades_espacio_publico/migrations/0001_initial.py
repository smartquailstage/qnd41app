# Generated by Django 4.2.13 on 2024-06-03 01:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoria', models.IntegerField(choices=[(30000, 'Evento 30000'), (20000, 'Evento 20000'), (10000, 'Evento 10000'), (5000, 'Circulación 5000')])),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.CharField(max_length=200, verbose_name='Descripción')),
                ('colores', models.CharField(blank=True, choices=[('primary', 'Verde'), ('warning', 'Amarillo'), ('danger', 'Rojo'), ('dark', 'Negro')], max_length=200, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True, verbose_name='Evento_url')),
            ],
            options={
                'verbose_name_plural': 'Categorias de Eventos',
                'ordering': ['categoria'],
            },
        ),
        migrations.CreateModel(
            name='Evento_5000',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicios_artisticos', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rider_tecnico', models.IntegerField(blank=True, choices=[(15000, '15000'), (10000, '10000'), (4000, '4000')], null=True)),
                ('direccion_artistica', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('aforo', models.IntegerField(blank=True, null=True)),
                ('ediciones_anteriores', models.BooleanField(blank=True, default=False, help_text='Marque si el evento al que usted desea proponer tiene ediciones anteriores.', null=True)),
                ('actividades_academicas_complementarias', models.TextField(blank=True, null=True)),
                ('actividades_emprendimiento_complementarias', models.TextField(blank=True, null=True)),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos_5000', to='actividades_espacio_publico.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Nombre de Usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Evento_30000',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicios_artisticos', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rider_tecnico', models.IntegerField(blank=True, choices=[(15000, '15000'), (10000, '10000'), (4000, '4000')], null=True)),
                ('direccion_artistica', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('aforo', models.IntegerField(blank=True, null=True)),
                ('ediciones_anteriores', models.BooleanField(blank=True, default=False, help_text='Marque si el evento al que usted desea proponer tiene ediciones anteriores.', null=True)),
                ('actividades_academicas_complementarias', models.TextField(blank=True, null=True)),
                ('actividades_emprendimiento_complementarias', models.TextField(blank=True, null=True)),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos_30000', to='actividades_espacio_publico.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Nombre de Usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Evento_20000',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicios_artisticos', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rider_tecnico', models.IntegerField(blank=True, choices=[(15000, '15000'), (10000, '10000'), (4000, '4000')], null=True)),
                ('direccion_artistica', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('aforo', models.IntegerField(blank=True, null=True)),
                ('ediciones_anteriores', models.BooleanField(blank=True, default=False, help_text='Marque si el evento al que usted desea proponer tiene ediciones anteriores.', null=True)),
                ('actividades_academicas_complementarias', models.TextField(blank=True, null=True)),
                ('actividades_emprendimiento_complementarias', models.TextField(blank=True, null=True)),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos_20000', to='actividades_espacio_publico.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Nombre de Usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Evento_10000',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicios_artisticos', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rider_tecnico', models.IntegerField(blank=True, choices=[(15000, '15000'), (10000, '10000'), (4000, '4000')], null=True)),
                ('direccion_artistica', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('aforo', models.IntegerField(blank=True, null=True)),
                ('ediciones_anteriores', models.BooleanField(blank=True, default=False, help_text='Marque si el evento al que usted desea proponer tiene ediciones anteriores.', null=True)),
                ('actividades_academicas_complementarias', models.TextField(blank=True, null=True)),
                ('actividades_emprendimiento_complementarias', models.TextField(blank=True, null=True)),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos_10000', to='actividades_espacio_publico.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Nombre de Usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicios_artisticos', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rider_tecnico', models.IntegerField(blank=True, choices=[(15000, '15000'), (10000, '10000'), (4000, '4000')], null=True)),
                ('direccion_artistica', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('aforo', models.IntegerField(blank=True, null=True)),
                ('ediciones_anteriores', models.BooleanField(blank=True, default=False, help_text='Marque si el evento al que usted desea proponer tiene ediciones anteriores.', null=True)),
                ('actividades_academicas_complementarias', models.TextField(blank=True, null=True)),
                ('actividades_emprendimiento_complementarias', models.TextField(blank=True, null=True)),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos', to='actividades_espacio_publico.subject')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Nombre de Usuario')),
            ],
        ),
    ]
