[uwsgi]

# Ruta al entorno virtual (Virtualenv)
virtualenv = /py/

# Configuración de Django (asegúrate de que esta variable esté correcta)
env = DJANGO_SETTINGS_MODULE=qnd41app.settings.pro

# Archivo WSGI
wsgi-file = /qnd41app/qnd41app/qnd41app/wsgi.py

# Configuración de procesos y hilos
master = true               # Habilitar proceso maestro
processes = 4               # Incrementar procesos para manejar más tráfico
threads = 2                 # Reducir hilos si usas múltiples workers para evitar bloqueos
no-orphans = true           # Asegura que no haya procesos huérfanos

# Configuración de rendimiento
reload-on-rss = 256         # Reinicia workers si exceden 256MB de RAM (puedes ajustar según la RAM disponible)
lazy-apps = true            # Mejora la inicialización de aplicaciones en configuraciones con varios workers
cheaper = 2                 # Mínimo número de workers activos en baja carga
cheaper-initial = 2         # Workers iniciales al iniciar
cheaper-step = 1            # Incremento gradual de workers cuando hay más carga
cheaper-algo = spare        # Algoritmo para gestionar workers en función de carga

# Configuración de seguridad
vacuum = true               # Limpia sockets y otros archivos temporales al reiniciar
disable-logging = true      # Opcional: Desactiva logging por request para reducir overhead en Kubernetes
thread-lock = true          # Mantén activado si usas múltiples hilos para evitar condiciones de carrera

# Estadísticas de uWSGI
stats = :9191               # Habilita estadísticas en el puerto 9191
stats-http = true           # Habilita acceso HTTP para estadísticas
workers = 4
harakiri = 30

# Configuración de logs
logto = /var/log/uwsgi/uwsgi.log  
log-reopen = true         

# Ajustes para Kubernetes
die-on-term = true          # Asegúrate de que uWSGI respete señales SIGTERM para que Kubernetes gestione correctamente el shutdown
